{"!":"com.github.javaparser.ast.CompilationUnit","range":{"beginLine":1,"beginColumn":1,"endLine":21,"endColumn":2},"tokenRange":{"beginToken":{"kind":19,"text":"class"},"endToken":{"kind":0,"text":""}},"imports":[],"types":[{"!":"com.github.javaparser.ast.body.ClassOrInterfaceDeclaration","range":{"beginLine":1,"beginColumn":1,"endLine":21,"endColumn":2},"tokenRange":{"beginToken":{"kind":19,"text":"class"},"endToken":{"kind":100,"text":"}"}},"extendedTypes":[],"implementedTypes":[],"isInterface":"false","typeParameters":[],"members":[{"!":"com.github.javaparser.ast.body.MethodDeclaration","range":{"beginLine":7,"beginColumn":5,"endLine":19,"endColumn":5},"tokenRange":{"beginToken":{"kind":47,"text":"public"},"endToken":{"kind":100,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":7,"beginColumn":36,"endLine":19,"endColumn":5},"tokenRange":{"beginToken":{"kind":99,"text":"{"},"endToken":{"kind":100,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.IfStmt","range":{"beginLine":8,"beginColumn":2,"endLine":11,"endColumn":2},"tokenRange":{"beginToken":{"kind":34,"text":"if"},"endToken":{"kind":100,"text":"}"}},"condition":{"!":"com.github.javaparser.ast.expr.BinaryExpr","range":{"beginLine":8,"beginColumn":6,"endLine":8,"endColumn":14},"tokenRange":{"beginToken":{"kind":94,"text":"c"},"endToken":{"kind":89,"text":"'\\n'"}},"left":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":8,"beginColumn":6,"endLine":8,"endColumn":6},"tokenRange":{"beginToken":{"kind":94,"text":"c"},"endToken":{"kind":94,"text":"c"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":8,"beginColumn":6,"endLine":8,"endColumn":6},"tokenRange":{"beginToken":{"kind":94,"text":"c"},"endToken":{"kind":94,"text":"c"}},"identifier":"c"}},"operator":"EQUALS","right":{"!":"com.github.javaparser.ast.expr.CharLiteralExpr","range":{"beginLine":8,"beginColumn":11,"endLine":8,"endColumn":14},"tokenRange":{"beginToken":{"kind":89,"text":"'\\n'"},"endToken":{"kind":89,"text":"'\\n'"}},"value":"\\n"}},"thenStmt":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":8,"beginColumn":17,"endLine":11,"endColumn":2},"tokenRange":{"beginToken":{"kind":99,"text":"{"},"endToken":{"kind":100,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":9,"beginColumn":6,"endLine":9,"endColumn":18},"tokenRange":{"beginToken":{"kind":94,"text":"hasLf"},"endToken":{"kind":103,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.AssignExpr","range":{"beginLine":9,"beginColumn":6,"endLine":9,"endColumn":17},"tokenRange":{"beginToken":{"kind":94,"text":"hasLf"},"endToken":{"kind":60,"text":"true"}},"operator":"ASSIGN","target":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":9,"beginColumn":6,"endLine":9,"endColumn":10},"tokenRange":{"beginToken":{"kind":94,"text":"hasLf"},"endToken":{"kind":94,"text":"hasLf"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":9,"beginColumn":6,"endLine":9,"endColumn":10},"tokenRange":{"beginToken":{"kind":94,"text":"hasLf"},"endToken":{"kind":94,"text":"hasLf"}},"identifier":"hasLf"}},"value":{"!":"com.github.javaparser.ast.expr.BooleanLiteralExpr","range":{"beginLine":9,"beginColumn":14,"endLine":9,"endColumn":17},"tokenRange":{"beginToken":{"kind":60,"text":"true"},"endToken":{"kind":60,"text":"true"}},"value":"true"}}},{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":10,"beginColumn":6,"endLine":10,"endColumn":17},"tokenRange":{"beginToken":{"kind":49,"text":"return"},"endToken":{"kind":103,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.BooleanLiteralExpr","range":{"beginLine":10,"beginColumn":13,"endLine":10,"endColumn":16},"tokenRange":{"beginToken":{"kind":60,"text":"true"},"endToken":{"kind":60,"text":"true"}},"value":"true"}}]}},{"!":"com.github.javaparser.ast.stmt.IfStmt","range":{"beginLine":13,"beginColumn":2,"endLine":16,"endColumn":2},"tokenRange":{"beginToken":{"kind":34,"text":"if"},"endToken":{"kind":100,"text":"}"}},"condition":{"!":"com.github.javaparser.ast.expr.BinaryExpr","range":{"beginLine":13,"beginColumn":6,"endLine":13,"endColumn":14},"tokenRange":{"beginToken":{"kind":94,"text":"c"},"endToken":{"kind":89,"text":"'\\r'"}},"left":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":13,"beginColumn":6,"endLine":13,"endColumn":6},"tokenRange":{"beginToken":{"kind":94,"text":"c"},"endToken":{"kind":94,"text":"c"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":13,"beginColumn":6,"endLine":13,"endColumn":6},"tokenRange":{"beginToken":{"kind":94,"text":"c"},"endToken":{"kind":94,"text":"c"}},"identifier":"c"}},"operator":"EQUALS","right":{"!":"com.github.javaparser.ast.expr.CharLiteralExpr","range":{"beginLine":13,"beginColumn":11,"endLine":13,"endColumn":14},"tokenRange":{"beginToken":{"kind":89,"text":"'\\r'"},"endToken":{"kind":89,"text":"'\\r'"}},"value":"\\r"}},"thenStmt":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":13,"beginColumn":17,"endLine":16,"endColumn":2},"tokenRange":{"beginToken":{"kind":99,"text":"{"},"endToken":{"kind":100,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":14,"beginColumn":6,"endLine":14,"endColumn":18},"tokenRange":{"beginToken":{"kind":94,"text":"hasCr"},"endToken":{"kind":103,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.AssignExpr","range":{"beginLine":14,"beginColumn":6,"endLine":14,"endColumn":17},"tokenRange":{"beginToken":{"kind":94,"text":"hasCr"},"endToken":{"kind":60,"text":"true"}},"operator":"ASSIGN","target":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":14,"beginColumn":6,"endLine":14,"endColumn":10},"tokenRange":{"beginToken":{"kind":94,"text":"hasCr"},"endToken":{"kind":94,"text":"hasCr"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":14,"beginColumn":6,"endLine":14,"endColumn":10},"tokenRange":{"beginToken":{"kind":94,"text":"hasCr"},"endToken":{"kind":94,"text":"hasCr"}},"identifier":"hasCr"}},"value":{"!":"com.github.javaparser.ast.expr.BooleanLiteralExpr","range":{"beginLine":14,"beginColumn":14,"endLine":14,"endColumn":17},"tokenRange":{"beginToken":{"kind":60,"text":"true"},"endToken":{"kind":60,"text":"true"}},"value":"true"}}},{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":15,"beginColumn":6,"endLine":15,"endColumn":17},"tokenRange":{"beginToken":{"kind":49,"text":"return"},"endToken":{"kind":103,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.BooleanLiteralExpr","range":{"beginLine":15,"beginColumn":13,"endLine":15,"endColumn":16},"tokenRange":{"beginToken":{"kind":60,"text":"true"},"endToken":{"kind":60,"text":"true"}},"value":"true"}}]}},{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":18,"beginColumn":2,"endLine":18,"endColumn":14},"tokenRange":{"beginToken":{"kind":49,"text":"return"},"endToken":{"kind":103,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.BooleanLiteralExpr","range":{"beginLine":18,"beginColumn":9,"endLine":18,"endColumn":13},"tokenRange":{"beginToken":{"kind":28,"text":"false"},"endToken":{"kind":28,"text":"false"}},"value":"false"}}]},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":7,"beginColumn":12,"endLine":7,"endColumn":18},"tokenRange":{"beginToken":{"kind":13,"text":"boolean"},"endToken":{"kind":13,"text":"boolean"}},"type":"BOOLEAN","annotations":[]},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":7,"beginColumn":5,"endLine":7,"endColumn":10},"tokenRange":{"beginToken":{"kind":47,"text":"public"},"endToken":{"kind":47,"text":"public"}},"keyword":"PUBLIC"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":7,"beginColumn":20,"endLine":7,"endColumn":26},"tokenRange":{"beginToken":{"kind":94,"text":"addChar"},"endToken":{"kind":94,"text":"addChar"}},"identifier":"addChar"},"parameters":[{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":7,"beginColumn":28,"endLine":7,"endColumn":33},"tokenRange":{"beginToken":{"kind":18,"text":"char"},"endToken":{"kind":94,"text":"c"}},"annotations":[],"isVarArgs":"false","modifiers":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":7,"beginColumn":33,"endLine":7,"endColumn":33},"tokenRange":{"beginToken":{"kind":94,"text":"c"},"endToken":{"kind":94,"text":"c"}},"identifier":"c"},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":7,"beginColumn":28,"endLine":7,"endColumn":31},"tokenRange":{"beginToken":{"kind":18,"text":"char"},"endToken":{"kind":18,"text":"char"}},"type":"CHAR","annotations":[]},"varArgsAnnotations":[]}],"thrownExceptions":[],"typeParameters":[],"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":2,"beginColumn":5,"endLine":6,"endColumn":7},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n     * {@inheritDoc}\n     *\n     * Overridden to find the start of a line-end.\n     */"},"endToken":{"kind":8,"text":"/**\n     * {@inheritDoc}\n     *\n     * Overridden to find the start of a line-end.\n     */"}},"content":"\n     * {@inheritDoc}\n     *\n     * Overridden to find the start of a line-end.\n     "}}],"modifiers":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":1,"beginColumn":7,"endLine":1,"endColumn":10},"tokenRange":{"beginToken":{"kind":94,"text":"Test"},"endToken":{"kind":94,"text":"Test"}},"identifier":"Test"},"annotations":[]}]}